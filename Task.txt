# client-server chat application
	2	2	 
	3	3	Разработка терминального клиент-серверного приложения для обмена текстовыми сообщениями между ограниченной группой лиц.
 	4	4	Пользователь может выбирать, с кем он хочет общаться. Также пользователь может получать сообщения от разных клиентов (в одной сессии).
	5	5	Возможность отправки сообщений не должна зависеть от статуса сессии партнера (онлайн - подключен к серверу / оффлайн - отключен от сервера)
	6	6	 
 	7	7	Оглавление:
 	8	8	1. Протокол взаимодействия клиента и сервера
	9	9	    1.1 Соединение
	10	10	    1.2 Структура команды
 	11	11	    1.3 Команда для отправки сообщения клиенту-получателю
 	12	12	    1.4 Оффлайн-команды
 	13	13	    1.5 Ответ
	14	14	    1.6 len
	15	15	    1.7 type
	16	16	    1.8 message id
	 	17	    1.9 Код ответа
	17	18	2. Сервер
 	18	19	    2.1 Основной поток
	19	20	    2.2 Поток обработки клиента
	20	21	3. Клиент
	21	22	    3.1 Начало работы приложения
 	22	23	    3.2 Подключение к серверу
	23	24	    3.3 Запуск потока на принятие команд
 	24	25	    3.4 Отправка команд
 	25	26	    3.5 Завершение потока на принятие команд
 	26	27	    3.6 Завершение работы приложения
	27	28	 
	28	29	 
 	29	30	1. Протокол взаимодействия клиента и сервера:
	30	31	 
 	31	32	1.1. Соединение.
	32	33	    Соединение происходит по протоколу TCP.
	33	34	 
 	34	35	1.2. Структура команды.
	35	36	    -----------------------------------------------------
 	36	37	    | len(2 bytes) | type(2 bytes) | messageID(4 bytes) |
	37	38	    -----------------------------------------------------
 	38	39	    |               SRC_username(8 bytes)               |
	39	40	    -----------------------------------------------------
	40	41	    |               DST_username(8 bytes)               |
 	41	42	    -----------------------------------------------------
 	42	43	    |               message(0-1000 bytes)               |
	43	44	    -----------------------------------------------------
	44	45	    Все команды передаются в бинарном виде. Каждая команда весит от 24 до 1024 байт.
 	45	46	    Поле SRC_username - username клиента-отправителя.
 	46	47	    Поле DST_username - username клиента-получателя.
	47	48	    message - сообщение клиента-отправителя клиенту-получателю или код ответа.
 	48	49	 
	49	50	1.3. Команда для отправки сообщения клиенту-получателю.
 	50	51	    Отправка обычных команд с текстом для клиента-получателя. type = 0.
	51	52	 
 	52	53	1.4. Оффлайн-команды.
 	53	54	    Команды, полученные сервером, и не имеющие type=1, во время отсутствия клиента-получателя, получают type=2, накапливаются и сохраняются на сервере.
	54	55	    При подключении клиента, для которого есть оффлайн-команды, сервер отправляет такие команды клиенту.
	55	56	 
	56	57	1.5. Ответ.
 	57	58	    Ответ нужен для подтверждения состояния подключения клиента-получателя к серверу.
	58	59	    Клиент-получатель, получивший команду с type=0, должен ответить кодом ответа="200".
 	59	60	    Сервер, не получивший ответ от клиента-получателя в течение 3 секунд, считает клиента-получателя отсоединившимся и отправляет клиенту-отправителю код ответа="300".
	60	61	    Команда-ответ содержит: type = 1,
	61	62	        messageID - messageID команды, на которую предполагается ответ,
	62	63	        message - "200", если клиент-получатель ответил, или "300", если клиент-получатель не ответил,
	63	64	        DST_username - username клиента-отправителя.
	64	65	 
	65	66	1.6. len.
	66	67	    Поле len используется для определения размера команды, является целочисленным значением.
	67	68	    Может принимать значение от 24 до 1024.
	68	69	 
	69	70	1.7. type.
	70	71	    Тип команды. Используется для возможности определения способа обработки команды.
 	71	72	    type может принимать значение:
 	72	73	    0 - команда для отправки сообщения клиенту-получателю (ответ ожидается).
 	73	74	    1 - ответ (ответ не ожидается).
 	74	75	    2 - оффлайн-команды (ответ не ожидается).
 	75	76	 
	76	77	1.8. messageID.
 	77	78	    Является целым положительным числом. Используется для возможности идентифиации команд.
	78	79	    Изначально равен 0 и прибавляется по 1 при каждом отправлении команды серверу.
	79	80	    Является целочисленным значением от 0 до 4 294 967 295.
 	80	81	    MessageID уникален для каждого SRC_username при отправке команд.
	81	82	 
 	82	83	1.9. Код ответа.
 	83	84	    Код ответа используется для информирования о статусе прочтения сообщения клиентом-получателем.
 	84	85	    Код ответа является строкой, которая может заполняться "200", если клиент ответил (заполняется клиентом, отправляющим ответ),
	85	86	        или "300", если клиент-получатель не ответил в пределах установленного временного лимита(заполняется сервером).
 	86	87	